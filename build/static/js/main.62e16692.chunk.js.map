{"version":3,"sources":["components/Navigation.js","constants/routes.js","components/Header.js","constants/issues.js","components/IssueSelector.js","components/ChooseYourIssues.js","components/MakeYourPlan.js","components/ShareYourPledge.js","components/About.js","components/App.js","serviceWorker.js","index.js"],"names":["Navigation","react_default","a","createElement","className","type","data-toggle","data-target","id","Link","to","Header","activeRoute","this","props","React","Component","issueData","Trump","Conservation","Voting Rights","Hey Congress â€” Get Your Act Together!","Students","IssueSelector","category","map","issue","i","selectedOptions","indexOf","key","concat","name","onChange","controlFunc","value","checked","ChooseYourIssues","gtag","window","location","hostname","page_location","href","page_path","pathname","_this","src_components_Header","Object","keys","src_components_IssueSelector","update","getSelectedIssues","MakeYourPlan","issues","ShareYourPledge","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","colorPalette","resolution","w","innerWidth","frameWidth","length","updateCanvas","text","canvas","document","getElementById","width","height","ctx","getContext","fillStyle","fillRect","font","x","context","y","maxWidth","lineHeight","words","split","line","n","testLine","measureText","fillText","wrapText","style","addEventListener","event","event_label","event_category","imgLink","toDataURL","link","setAttribute","About","App","getIssueSelection","state","selectedIssues","handleIssueSelection","e","newSelectionArray","newSelection","target","filter","toConsumableArray","setState","_this2","BrowserRouter","src_components_Navigation","Redirect","exact","from","Switch","Route","path","render","src_components_ChooseYourIssues","assign","src_components_MakeYourPlan","components_ShareYourPledge","src_components_About","Boolean","match","ReactDOM","src_components_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.62e16692.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport * as routes from '../constants/routes';\r\n\r\nimport './Navigation.css';\r\n\r\nconst Navigation = () =>\r\n  <nav className=\"navbar navbar-left\">\r\n\t  <div className=\"container-fluid\">\r\n\t    <div className=\"navbar-header\">\r\n\t      <button type=\"button\" className=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#myNavbar\">\r\n\t        <span className=\"icon-bar\"></span>\r\n\t        <span className=\"icon-bar\"></span>\r\n\t        <span className=\"icon-bar\"></span> \r\n\t      </button>\r\n\t      <span className=\"navbar-brand\">#VoteTheIssues</span>\r\n\t    </div>\r\n\t    <div className=\"collapse navbar-collapse\" id=\"myNavbar\">\r\n\t      <ul className=\"nav navbar-nav\">\r\n\t\t\t\t\t<li><Link to={routes.CHOOSE_YOUR_ISSUES}>Choose your issues.</Link></li>\r\n\t        <li><Link to={routes.MAKE_YOUR_PLAN}>Make your plan.</Link></li> \r\n\t        <li><Link to={routes.SHARE_YOUR_PLEDGE}>Pledge.</Link></li>\r\n\t        <li><Link to={routes.ABOUT}>About.</Link></li> \r\n\t      </ul>\r\n\t    </div>\r\n\t  </div>\r\n\t</nav>\r\n\r\nexport default Navigation;\r\n","// TODO: ask Oliver if he wants a homepage\r\nexport const CHOOSE_YOUR_ISSUES = '/choose-your-issues';\r\nexport const MAKE_YOUR_PLAN = '/make-your-plan';\r\nexport const SHARE_YOUR_PLEDGE = '/share-your-pledge';\r\nexport const ABOUT = '/about';","import React from 'react';\r\n\r\nimport './Header.css';\r\n\r\nclass Header extends React.Component {\r\n    render() {\r\n        let activeRoute = this.props.activeRoute;\r\n        return (\r\n            <div className='header'>\r\n                <span className={activeRoute === 'choose-your-issues' ? 'active' : ''} id=\"first\">Choose your issues.</span>\r\n                <span className={activeRoute === 'make-your-plan' ? 'active' : ''} id=\"second\">Make your plan.</span>\r\n                <span className={activeRoute === 'share-your-pledge' ? 'active' : ''} id=\"third\">Share your pledge.</span>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Header;\r\n","const issueData = {\r\n    'Trump': [\r\n        'Congressional Dems need the power to subpoena this corrupt administration.',\r\n        '...',\r\n        '...',\r\n    ],\r\n    'Conservation': [\r\n        'National monuments are public treasures, not business opportunities for Trumpâ€™s mining buddies.',\r\n        'The DoD believes in climate change. So should Congress.',\r\n        'Remember the polar bears? Only Congress can save the Artic National Wildlife Refuge from oil drilling.'\r\n    ],\r\n    'Voting Rights': [\r\n        'It\\'s time for the Voting Rights Act of 2018.',\r\n        'The culture wars are back and we canâ€™t let neo-Nazis gain an inch.',\r\n        'Flint still doesnâ€™t have reliable, lead-free drinking water.'\r\n    ],\r\n    'Hey Congress â€” Get Your Act Together!': [\r\n        'Weapons of war have no place in schoolhouse or police stations.',\r\n        'Congress shouldn\\'t ransom undocumented children to buy Trump a wall.',\r\n        'hi 3'\r\n    ],\r\n    'Students': [\r\n        'Education is forever. Student loans shouldn\\'t be.',\r\n        'We marched together. Now it\\'s time to vote together.',\r\n        '...',\r\n    ]\r\n}\r\n\r\nexport default issueData;\r\n","import React from 'react';\r\n\r\nimport './IssueSelector.css';\r\n\r\nimport issueData from '../constants/issues';\r\n\r\nconst IssueSelector = (props) => (\r\n  <div className=\"all-issues\">\r\n    <div className=\"row multi-bar\">\r\n      <div className=\"col-xs-4 bar-left\"></div>\r\n      <div className=\"col-xs-8 bar-right\"></div>\r\n    </div>\r\n    <div className='issue-selector'>\r\n      <div className=\"row multi-bar\">\r\n        <div className=\"col-xs-4\">\r\n          <label className='category-label'>{props.category}</label>\r\n        </div>\r\n      </div>\r\n      <div className='checkbox-group'>\r\n        {issueData[props.category].map(function(issue, i) {\r\n          if (props.selectedOptions.indexOf(issue) > -1) {\r\n            // userdata.length = 0;\r\n            // userdata.push({issue});\r\n            // console.log(userdata)\r\n          }\r\n          return (\r\n              <div className=\"row\" key={`${issue}_row${i}`}>\r\n                <div className=\"col-xs-8 leftbox\">\r\n                  <label key={issue} className='issue-label'>\r\n                    <input\r\n                      className='form-checkbox'\r\n                      name={issue}\r\n                      onChange={props.controlFunc}\r\n                      value={issue}\r\n                      checked={props.selectedOptions.indexOf(issue) > -1}\r\n                      type='checkbox'\r\n                    /> {issue}\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default IssueSelector;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Header from './Header';\r\nimport IssueSelector from './IssueSelector';\r\n\r\nimport issueData from '../constants/issues';\r\nimport * as routes from '../constants/routes';\r\n\r\nimport './ChooseYourIssues.css';\r\n\r\n\r\n// helped by https://lorenstewart.me/2016/10/31/react-js-forms-controlled-components/\r\nclass ChooseYourIssues extends React.Component {\r\n    componentDidMount () {\r\n        // send page hit to Google Analytics\r\n        const gtag = window.gtag;\r\n        if (window.location.hostname !== 'localhost') {\r\n            gtag('config', 'UA-128119729-1', {\r\n                'page_location': window.location.href,\r\n                'page_path': window.location.pathname,\r\n            });\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header activeRoute='choose-your-issues' />\r\n                <div className=\"container\">\r\n                    {Object.keys(issueData).map(category => {\r\n                        return (\r\n                            <IssueSelector \r\n                                key={category}\r\n                                category={category}\r\n                                controlFunc={this.props.update}\r\n                                selectedOptions={this.props.getSelectedIssues()}\r\n                            />\r\n                        );\r\n                    })}    \r\n                </div>\r\n                <div className=\"row multi-bar\">\r\n                  <div className=\"col-xs-4 bar-left\"></div>\r\n                  <div className=\"col-xs-8 bar-right\"></div>\r\n                </div>\r\n                <p className=\"footer\"><Link to={routes.MAKE_YOUR_PLAN}>Make your plan >>></Link></p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ChooseYourIssues;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Header from './Header';\r\n\r\nimport * as routes from '../constants/routes';\r\n\r\nimport './MakeYourPlan.css';\r\n\r\nclass MakeYourPlan extends React.Component {\r\n    componentDidMount () {\r\n        // Send page hit to Google Analytics\r\n        const gtag = window.gtag;\r\n        if (window.location.hostname !== 'localhost') {\r\n            gtag('config', 'UA-128119729-1', {\r\n                'page_location': window.location.href,\r\n                'page_path': window.location.pathname,\r\n            });\r\n        };\r\n    }\r\n    render() {\r\n        const issues = this.props.getSelectedIssues();\r\n        return (\r\n            <div> \r\n                <Header activeRoute='make-your-plan' />\r\n                <div className=\"container plan\">\r\n                \t<p>Making a concrete plan increases voter turnout by XX%. How are you getting to the polls?</p>\r\n                \t<div className=\"row multi-bar\">\r\n\t                  <div className=\"col-xs-4 bar-left\"></div>\r\n\t                  <div className=\"col-xs-8 bar-right\"></div>\r\n\t                </div>\r\n                \t<div className=\"row\">\r\n                        <p>I'm voting</p>\r\n                    </div>\r\n                    <div className=\"row middle-row\">\r\n                \t\t<div className=\"form-group\">\r\n                            <div className=\"col-xs-4\">\r\n                \t\t\t<select className=\"form-conâ€ rol\" id=\"vote-method\">\r\n\t        \t\t\t\t\t<option id=\"person\"> in-person </option>\r\n\t        \t\t\t\t\t<option id=\"mail\"> by mail </option>\r\n\t        \t\t\t\t</select>\r\n                            </div>\r\n                            <div className=\"col-xs-4\">\r\n\t        \t\t\t\t<select className=\"form-conâ€ rol\" id=\"bda\">\r\n            \t\t\t\t\t<option id=\"before\"> before </option>\r\n            \t\t\t\t\t<option id=\"during\"> during </option>\r\n            \t\t\t\t\t<option id=\"after\"> after </option>\r\n            \t\t\t\t</select>\r\n                            </div>\r\n                            <div className=\"col-xs-4\">\r\n                \t\t\t<select className=\"form-conâ€ rol\" id=\"when\">\r\n            \t\t\t\t\t<option id=\"breakfast\"> breakfast </option>\r\n            \t\t\t\t\t<option id=\"lunch\"> lunch </option>\r\n            \t\t\t\t\t<option id=\"dinner\"> dinner </option>\r\n            \t\t\t\t\t<option id=\"school\"> school </option>\r\n            \t\t\t\t\t<option id=\"work\"> work </option>\r\n            \t\t\t\t</select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n        \t\t\t\t<p> with </p>\r\n        \t\t\t\t<input type=\"text\" id=\"buddy\"></input>\r\n            \t\t</div>\r\n                \t<div className=\"row multi-bar\">\r\n\t                  <div className=\"col-xs-4 bar-left\"></div>\r\n\t                  <div className=\"col-xs-8 bar-right\"></div>\r\n\t                </div>\r\n                    <div className=\"row\">\r\n    \t                <div className=\"col-xs-4\">\r\n                            <p>Confirm Rankings</p>\r\n                        </div>\r\n                        <div className=\"col-xs-8\">\r\n                            <ul className=\"sortable\" id=\"rankings\">\r\n                                {issues.map(function(issue, i) {\r\n                                    return <li key={i} id={`issue_${i}`}>{issues[i]}</li>\r\n                                })}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                \t<p className=\"footer\"><Link to={routes.SHARE_YOUR_PLEDGE}>Share your pledge >>></Link></p>\r\n                </div>\r\n            <script>\r\n                eval(var el = document.getElementById('rankings');\r\n                console.log(el);\r\n                var sortable = Sortable.create(el);)\r\n            </script>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MakeYourPlan;","import React from 'react';\r\n\r\nimport Header from './Header';\r\n\r\n\r\nclass ShareYourPledge extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.colorPalette = ['#5FD0D4', '#FD2E58', '#EFA93A', '#343D3A', '#F1E7DE',  '#EFA93A', '#343D3A', '#FD2E58'];\r\n        this.resolution = 1080;\r\n    }\r\n\r\n    componentDidMount () {\r\n        // Send page hit to Google Analytics\r\n        if (window.location.hostname !== 'localhost') {\r\n            const gtag = window.gtag;\r\n            gtag('config', 'UA-128119729-1', {\r\n                'page_location': window.location.href,\r\n                'page_path': window.location.pathname,\r\n            });\r\n        };\r\n\r\n        const issues = this.props.getSelectedIssues();\r\n        // Calculate image display size\r\n        // TODO: figure out line breaks?\r\n        const w = window.innerWidth;\r\n        const frameWidth = `${w / issues.length - 50}px`\r\n        \r\n        // Add text to images\r\n        for (let i = 0; i < issues.length; i++) {\r\n            this.updateCanvas(issues[i], frameWidth, i);\r\n        }\r\n    }\r\n\r\n    updateCanvas (text, frameWidth, i) {\r\n        // from https://www.html5canvastutorials.com/tutorials/html5-canvas-wrap-text-tutorial/\r\n        function wrapText(context, text, x, y, maxWidth, lineHeight) {\r\n            var words = text.split(' ');\r\n            var line = '';\r\n            for(var n = 0; n < words.length; n++) {\r\n                var testLine = line + words[n] + ' ';\r\n                var metrics = context.measureText(testLine);\r\n                var testWidth = metrics.width;\r\n                if (testWidth > maxWidth && n > 0) {\r\n                    context.fillText(line, x, y);\r\n                    line = words[n] + ' ';\r\n                    y += lineHeight;\r\n                } else {\r\n                    line = testLine;\r\n                }\r\n            }\r\n            context.fillText(line, x, y);\r\n        }\r\n          \r\n        // Create canvas and set resolution\r\n        let canvas = document.getElementById(`issue_${i}`)\r\n        canvas.width = this.resolution;\r\n        canvas.height = this.resolution;\r\n\r\n        // Fill in background\r\n        let ctx = canvas.getContext(\"2d\");\r\n        ctx.fillStyle = this.colorPalette[i];\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n        \r\n        // Draw text\r\n        ctx.fillStyle = 'white';\r\n        ctx.font = \"italic bold 80px Arial\";\r\n        const maxWidth = 900;\r\n        const lineHeight = 100;\r\n        const x = (canvas.width - maxWidth)/2;\r\n        const y = 200;\r\n        wrapText(ctx, text, x, y, maxWidth, lineHeight);\r\n\r\n        // Set display size\r\n        canvas.style.width = frameWidth;\r\n        canvas.style.height = frameWidth;   \r\n\r\n        // Add click event listener\r\n        canvas.addEventListener('click', function(event) {\r\n            // send event to Google Analytics\r\n            if (window.location.hostname !== 'localhost') {\r\n                const gtag = window.gtag;\r\n                gtag('event', 'download', {\r\n                    'event_label': text,\r\n                    'event_category': 'issue_download'\r\n                })\r\n            };\r\n\r\n            const imgLink = canvas.toDataURL('image/jpg');\r\n            let link = document.getElementById(`link_${i}`);\r\n            link.setAttribute('download', `issue_${i}`);\r\n            link.setAttribute('href', imgLink);\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const issues = this.props.getSelectedIssues();\r\n        return (\r\n            <div>\r\n                <Header activeRoute='share-your-pledge' />\r\n                <p>Click on each image to download, then share on your favorite social media platform!</p>\r\n                {/* TODO: display plan information */}\r\n                {issues.map(function(issue, i) {\r\n                    return (\r\n                        <a key={i} id={`link_${i}`}>\r\n                            <canvas id={`issue_${i}`}></canvas>\r\n                        </a>\r\n                    );\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShareYourPledge;","import React from 'react';\n// import { Link } from 'react-router-dom';\n\nimport Header from './Header';\n\n// import * as routes from '../constants/routes';\n\nimport './About.css';\n\nclass About extends React.Component {\n    render() {\n        return (\n            <div>\n                <Header/>\n                <div className=\"container\">\n                \t<p>Lots of stuff about Vote the Issues</p>\n                    {/* TODO: Link back to beginning of workflow? */}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default About;\n","// TODO: connect to Firebase Database\n// follow https://www.codementor.io/yurio/all-you-need-is-react-firebase-4v7g9p4kf\n// routing help from https://www.robinwieruch.de/complete-firebase-authentication-react-tutorial/\n\nimport React, { Component } from 'react';\nimport { \n  Redirect,\n  BrowserRouter as Router, \n  Route,\n  Switch \n} from 'react-router-dom';\n\nimport Navigation from './Navigation';\nimport ChooseYourIssues from './ChooseYourIssues';\nimport MakeYourPlan from './MakeYourPlan';\nimport ShareYourPledge from './ShareYourPledge';\nimport About from './About';\n\nimport './App.css';\n\nimport * as routes from '../constants/routes';\n\nclass App extends Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n        selectedIssues: []\n      }\n  }\n  getIssueSelection = () => {\n    return this.state.selectedIssues;\n  }\n  handleIssueSelection = (e)  => {\n    const newSelection = e.target.value;\n    let newSelectionArray;\n    if (this.state.selectedIssues.indexOf(newSelection) > -1) {\n        newSelectionArray = this.state.selectedIssues.filter(x => x !== newSelection);\n    } else {\n        newSelectionArray = [...this.state.selectedIssues, newSelection];\n    }\n    this.setState({ selectedIssues: newSelectionArray });\n  }\n  render () {\n    return (\n      <Router>\n        <div>\n          {/* Display navigation menu */}\n          <Navigation />\n\n          {/* Set default home page to Choose Your Issues */}\n          <Redirect exact from='/' to={routes.CHOOSE_YOUR_ISSUES} />\n          \n          <Switch>\n          {/* Render specific pages when routed to */}\n          <Route\n            exact path={routes.CHOOSE_YOUR_ISSUES}\n            render={(props) => <ChooseYourIssues {...props} \n              update={this.handleIssueSelection}\n              getSelectedIssues={this.getIssueSelection} />}\n          />\n          <Route\n            exact path={routes.MAKE_YOUR_PLAN}\n            render={(props) => <MakeYourPlan {...props}\n              getSelectedIssues={this.getIssueSelection} />}\n          />\n          <Route\n            exact path={routes.SHARE_YOUR_PLEDGE}\n            render={(props) => <ShareYourPledge {...props} \n              getSelectedIssues={this.getIssueSelection} />}\n          />\n          <Route\n            exact path={routes.ABOUT}\n            render={(props) => <About {...props} \n              getSelectedIssues={this.getIssueSelection} />}\n          />\n\n          {/* Hack: redict 404 error from image download to \n          Share Your Pledge page */}\n          <Route \n            render={(props) => <ShareYourPledge {...props} \n            getSelectedIssues={this.getIssueSelection} />}\n          />\n        </Switch>\n\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}