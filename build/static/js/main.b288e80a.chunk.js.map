{"version":3,"sources":["components/Navigation.js","constants/routes.js","components/Header.js","constants/issues.js","components/IssueSelector.js","components/ChooseYourIssues.js","components/ShareYourPledge.js","components/App.js","serviceWorker.js","index.js"],"names":["Navigation","react_default","a","createElement","className","type","data-toggle","data-target","id","Link","to","Header","activeRoute","this","props","React","Component","issueData","Category 1","Category 2","Category 3","IssueSelector","category","map","issue","i","key","name","onChange","controlFunc","value","checked","selectedOptions","indexOf","ChooseYourIssues","_this","src_components_Header","Object","keys","src_components_IssueSelector","update","getSelectedIssues","ShareYourPledge","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","downloadImages","issues","isSafari","navigator","vendor","userAgent","length","imgLink","document","getElementById","concat","toDataURL","openTab","link","style","display","body","appendChild","setAttribute","click","removeChild","colorPalette","resolution","w","window","innerWidth","frameWidth","updateCanvas","url","target","href","e","createEvent","initMouseEvent","dispatchEvent","text","canvas","width","height","ctx","getContext","fillStyle","fillRect","font","context","x","y","maxWidth","lineHeight","words","split","line","n","testLine","measureText","fillText","wrapText","_this2","onClick","App","getIssueSelection","state","selectedIssues","handleIssueSelection","newSelectionArray","newSelection","filter","toConsumableArray","setState","_React$createElement","BrowserRouter","src_components_Navigation","Redirect","exact","from","defineProperty","Route","path","render","components_ChooseYourIssues","assign","components_ShareYourPledge","Boolean","location","hostname","match","ReactDOM","src_components_App","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b288e80a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport * as routes from '../constants/routes';\r\n\r\nimport './Navigation.css';\r\n\r\nconst Navigation = () =>\r\n    <nav className=\"navbar navbar-left\">\r\n\t  <div className=\"container-fluid\">\r\n\t    <div className=\"navbar-header\">\r\n\t      <button type=\"button\" className=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#myNavbar\">\r\n\t        <span className=\"icon-bar\"></span>\r\n\t        <span className=\"icon-bar\"></span>\r\n\t        <span className=\"icon-bar\"></span> \r\n\t      </button>\r\n\t      <span className=\"navbar-brand\">#VoteTheIssues</span>\r\n\t    </div>\r\n\t    <div className=\"collapse navbar-collapse\" id=\"myNavbar\">\r\n\t      <ul className=\"nav navbar-nav\">\r\n\t        <li><Link to={routes.CHOOSE_YOUR_ISSUES}>Choose your issues.</Link></li>\r\n\t\t\t\t\t{/* TODO: Re-enable when 'Make Your Plan' page is implemented */}\r\n\t\t\t\t\t{/* <li><Link to={routes.MAKE_YOUR_PLAN}>Make your plan.</Link></li>  */}\r\n\t        <li><Link to={routes.SHARE_YOUR_PLEDGE}>Share your pledge.</Link></li> \r\n\t      </ul>\r\n\t    </div>\r\n\t  </div>\r\n\t</nav>\r\n\r\nexport default Navigation;\r\n","// TODO: ask Oliver if he wants a homepage\r\nexport const CHOOSE_YOUR_ISSUES = '/choose-your-issues';\r\nexport const MAKE_YOUR_PLAN = '/make-your-plan';\r\nexport const SHARE_YOUR_PLEDGE = '/share-your-pledge';","import React from 'react';\r\n\r\nimport './Header.css';\r\n\r\nclass Header extends React.Component {\r\n    render() {\r\n        let activeRoute = this.props.activeRoute;\r\n        return (\r\n            <div className='header'>\r\n                <p className={activeRoute === 'choose-your-issues' ? 'active' : ''} id=\"first\">Choose your issues.</p>\r\n                {/* TODO: Re-enable when 'Make Your Plan' page is implemented */}\r\n                {/* <p className={activeRoute === 'make-your-plan' ? 'active' : ''} id=\"second\">Make your plan.</p> */}\r\n                <p className={activeRoute === 'share-your-pledge' ? 'active' : ''} id=\"third\">Share your pledge.</p>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Header;\r\n","const issueData = {\r\n    'Category 1': [\r\n        'description 1 that is really really long',\r\n        'description 2',\r\n        'description 3'\r\n    ],\r\n    'Category 2': [\r\n        'issue 1',\r\n        'issue 2',\r\n        'issue 3'\r\n    ],\r\n    'Category 3': [\r\n        'hi 1',\r\n        'hi 2',\r\n        'hi 3'\r\n    ]\r\n}\r\n\r\nexport default issueData;","import React from 'react';\r\n\r\nimport './IssueSelector.css';\r\n\r\nimport issueData from '../constants/issues';\r\n\r\nconst IssueSelector = (props) => (\r\n  <div className='issue-selector'>\r\n    <label className='category-label'>{props.category}</label>\r\n    <div className='checkbox-group'>\r\n      {issueData[props.category].map(function(issue, i) {\r\n        return (\r\n            <label key={issue} className='issue-label'>\r\n              <input\r\n                className='form-checkbox'\r\n                name={issue}\r\n                onChange={props.controlFunc}\r\n                value={issue}\r\n                checked={props.selectedOptions.indexOf(issue) > -1}\r\n                type='checkbox'\r\n              /> {issue}\r\n            </label>\r\n          );\r\n        })}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default IssueSelector;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Header from './Header';\r\nimport IssueSelector from './IssueSelector';\r\n\r\nimport issueData from '../constants/issues';\r\nimport * as routes from '../constants/routes';\r\n\r\n// helped by https://lorenstewart.me/2016/10/31/react-js-forms-controlled-components/\r\nclass ChooseYourIssues extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header activeRoute='choose-your-issues' />\r\n                {Object.keys(issueData).map(category => {\r\n                    return (\r\n                        <IssueSelector \r\n                            key={category}\r\n                            category={category}\r\n                            controlFunc={this.props.update}\r\n                            selectedOptions={this.props.getSelectedIssues()}\r\n                        />\r\n                    );\r\n                })}\r\n                \r\n                {/* TODO: Re-enable when 'Make Your Plan' page is implemented */}\r\n                {/* <p><Link to={routes.MAKE_YOUR_PLAN}>Make your plan >>></Link></p> */}\r\n                <p><Link to={routes.SHARE_YOUR_PLEDGE}>Share Your Pledge >>></Link></p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ChooseYourIssues;","import React from 'react';\r\n\r\nimport Header from './Header';\r\n\r\nclass ShareYourPledge extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.colorPalette = ['#5FD0D4', '#FD2E58', '#EFA93A', '#343D3A', '#F1E7DE',  '#EFA93A', '#343D3A', '#FD2E58'];\r\n        this.resolution = 1080;\r\n    }\r\n\r\n    componentDidMount () {\r\n        const issues = this.props.getSelectedIssues();\r\n\r\n        // Calculate image display size\r\n        // TODO: figure out line breaks?\r\n        const w = window.innerWidth - 50;\r\n        const frameWidth = `${w / issues.length}px`\r\n        \r\n        // Add text to images\r\n        for (let i = 0; i < issues.length; i++) {\r\n            this.updateCanvas(issues[i], frameWidth, i);\r\n        }\r\n    }\r\n\r\n    openTab (url) {\r\n        // Create link in memory\r\n        var a = window.document.createElement(\"a\");\r\n        a.target = '_blank';\r\n        a.href = url;\r\n     \r\n        // Dispatch fake click\r\n        var e = window.document.createEvent(\"MouseEvents\");\r\n        e.initMouseEvent(\"click\", true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\r\n        a.dispatchEvent(e);\r\n    };\r\n\r\n    downloadImages = (issues) => {\r\n        // Check if browser is Safari\r\n        var isSafari = navigator.vendor && navigator.vendor.indexOf('Apple') > -1 &&\r\n               navigator.userAgent &&\r\n               navigator.userAgent.indexOf('CriOS') === -1 &&\r\n               navigator.userAgent.indexOf('FxiOS') === -1;\r\n\r\n        // Adapted from https://stackoverflow.com/questions/2339440/download-multiple-files-with-a-single-action\r\n        for (var i = 0; i < issues.length; i++) {\r\n            var canvas = document.getElementById(`issue_${i}`);\r\n            var imgLink = canvas.toDataURL('image/jpg');\r\n            \r\n            if (isSafari) {\r\n                this.openTab(imgLink);\r\n            } else {\r\n                var link = document.createElement('a');\r\n                link.style.display = 'none';\r\n                document.body.appendChild(link);\r\n    \r\n                link.setAttribute('download', `issue_${i}`);\r\n                link.setAttribute('href', imgLink);\r\n                link.click()\r\n    \r\n                document.body.removeChild(link);\r\n            }\r\n        }\r\n    }\r\n\r\n    updateCanvas (text, frameWidth, i) {\r\n        // from https://www.html5canvastutorials.com/tutorials/html5-canvas-wrap-text-tutorial/\r\n        function wrapText(context, text, x, y, maxWidth, lineHeight) {\r\n            var words = text.split(' ');\r\n            var line = '';\r\n            for(var n = 0; n < words.length; n++) {\r\n                var testLine = line + words[n] + ' ';\r\n                var metrics = context.measureText(testLine);\r\n                var testWidth = metrics.width;\r\n                if (testWidth > maxWidth && n > 0) {\r\n                    context.fillText(line, x, y);\r\n                    line = words[n] + ' ';\r\n                    y += lineHeight;\r\n                } else {\r\n                    line = testLine;\r\n                }\r\n            }\r\n            context.fillText(line, x, y);\r\n        }\r\n          \r\n        // Create canvas and set resolution\r\n        let canvas = document.getElementById(`issue_${i}`)\r\n        canvas.width = this.resolution;\r\n        canvas.height = this.resolution;\r\n\r\n        // Fill in background\r\n        let ctx = canvas.getContext(\"2d\");\r\n        ctx.fillStyle = this.colorPalette[i];\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n        \r\n        // Draw text\r\n        ctx.fillStyle = 'white';\r\n        ctx.font = \"italic bold 80px Arial\";\r\n        const maxWidth = 900;\r\n        const lineHeight = 100;\r\n        const x = (canvas.width - maxWidth)/2;\r\n        const y = 200;\r\n        wrapText(ctx, text, x, y, maxWidth, lineHeight);\r\n\r\n        // Set display size\r\n        canvas.style.width = frameWidth;\r\n        canvas.style.height = frameWidth;   \r\n    }\r\n\r\n    render() {\r\n        const issues = this.props.getSelectedIssues();\r\n        return (\r\n            <div>\r\n                <Header activeRoute='share-your-pledge' />\r\n                <a id='download' onClick={() => this.downloadImages(issues)}>Download images!<br /></a>\r\n                {issues.map(function(issue, i) {\r\n                    return <canvas key={i} id={`issue_${i}`}></canvas>\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShareYourPledge;","// TODO: connect to Firebase Database\n// follow https://www.codementor.io/yurio/all-you-need-is-react-firebase-4v7g9p4kf\n// routing help from https://www.robinwieruch.de/complete-firebase-authentication-react-tutorial/\n\nimport React, { Component } from 'react';\nimport { \n  Redirect,\n  BrowserRouter as Router, \n  Route \n} from 'react-router-dom';\n\nimport Navigation from './Navigation';\nimport ChooseYourIssues from './ChooseYourIssues';\n// TODO: Re-enable when 'Make Your Plan' page is implemented\n// import MakeYourPlan from './MakeYourPlan';\nimport ShareYourPledge from './ShareYourPledge';\n\nimport './App.css';\n\nimport * as routes from '../constants/routes';\n\nclass App extends Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n        selectedIssues: []\n      }\n  }\n  getIssueSelection = () => {\n    return this.state.selectedIssues;\n  }\n  handleIssueSelection = (e)  => {\n    const newSelection = e.target.value;\n    let newSelectionArray;\n    if (this.state.selectedIssues.indexOf(newSelection) > -1) {\n        newSelectionArray = this.state.selectedIssues.filter(x => x !== newSelection);\n    } else {\n        newSelectionArray = [...this.state.selectedIssues, newSelection];\n    }\n    this.setState({ selectedIssues: newSelectionArray });\n  }\n  render () {\n    return (\n      <Router>\n        <div>\n          {/* Display navigation menu */}\n          <Navigation />\n\n          {/* Set default home page to Choose Your Issues */}\n          <Redirect exact from='/' exact to={routes.CHOOSE_YOUR_ISSUES} />\n          \n          {/* Render specific pages when routed to */}\n          <Route\n            exact path={routes.CHOOSE_YOUR_ISSUES}\n            render={(props) => <ChooseYourIssues {...props} \n              update={this.handleIssueSelection}\n              getSelectedIssues={this.getIssueSelection} />}\n          />\n          {/* TODO: Implement 'Make Your Plan' page */}\n          {/* <Route\n            exact path={routes.MAKE_YOUR_PLAN}\n            render={(props) => <MakeYourPlan {...props} />}\n          /> */}\n          <Route\n            exact path={routes.SHARE_YOUR_PLEDGE}\n            render={(props) => <ShareYourPledge {...props} \n              getSelectedIssues={this.getIssueSelection} />}\n          />\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}